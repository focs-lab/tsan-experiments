#!/bin/bash

set -e
export TIMEFORMAT=%E

[ -z "$FLAGS_TSAN"      ] && FLAGS_TSAN="-fsanitize=thread"
[ -z "$FLAGS_TSAN_NEW"  ] && FLAGS_TSAN_NEW="$FLAGS_TSAN -mllvm -tsan-use-escape-analysis-global"

[ -z "$CC"              ] && CC="clang"
[ -z "$CXX"             ] && CXX="clang++"

[ -z "$CFLAGS"          ] && CFLAGS="-mllvm -stats -g $FLAGS"
[ -z "$CXXFLAGS"        ] && CXXFLAGS="$CFLAGS"

[ -z "$SOURCE_DIR"      ] && SOURCE_DIR=$(realpath $(dirname $0))/bench
[ -z "$PASSES"          ] && PASSES="orig tsan tsan-new"
[ -z "$BUILD_DIR"       ] && BUILD_DIR="$(realpath $(dirname $0))/build"

[ -z "$RUN_CORES"       ] && RUN_CORES="0-$(($(nproc) - 1))"
[ -z "$BENCH_CORES"     ] && BENCH_CORES="$RUN_CORES"
[ -z "$BUILD_CORES"     ] && BUILD_CORES="$RUN_CORES"

# [ -z "$VTUNE_ENABLE"    ] && VTUNE_ENABLE=0
# [ -z "$VTUNE_HW_PROF"   ] && VTUNE_HW_PROF=1

PATH="$LLVM_ROOT_PATH/bin:$PATH"
# PATH="$VTUNE_ROOT_PATH/bin64:$PATH"

for COMMAND in "$CC" "$CXX"
do
    if ! command -v "$COMMAND" 2>&1 > /dev/null
    then
        echo "$COMMAND is not found"
        [ -z "$LLVM_ROOT_PATH" ] && echo "You can set path via LLVM_ROOT_PATH" || echo "Is LLVM_ROOT_PATH correct?"
        echo "It should point at LLVM build root, example: /path/to/llvm-project/build"
        exit
    fi
done

# if [ "$VTUNE_ENABLE" -ne 0 ] && ! command -v "vtune" 2>&1 > /dev/null
# then
#     echo "vtune is not found"
#     [ -z "$VTUNE_ROOT_PATH" ] && echo "You can set path via VTUNE_ROOT_PATH" || echo "Is VTUNE_ROOT_PATH correct?"
#     echo "It should point at VTune root, example: /path/to/vtune/2024.0"
#     exit
# fi

for PASS in $PASSES
do
    if [ "$PASS" = "tsan-new" ]
    then
        echo "int main() {}" | "$CC" -E -x c - $CFLAGS $FLAGS_TSAN_NEW -o /dev/null > /dev/null 2>&1
        if [ "$?" -ne 0 ]
        then
            echo "tsan-new specified, but $CC cannot compile with FLAGS_TSAN_NEW ($FLAGS_TSAN_NEW)"
            echo "$CC" -E -x c - "$CFLAGS" "$FLAGS_TSAN_NEW"
            exit
        fi
    fi
done

export PATH CC CXX CFLAGS CXXFLAGS FLAGS_TSAN FLAGS_TSAN_NEW \
    RUN_CORES BENCH_CORES BUILD_CORES PASSES

for VAR in "CC" "CXX" "CFLAGS" "FLAGS_TSAN" "FLAGS_TSAN_NEW" "SOURCE_DIR" \
           "BUILD_DIR" "RUN_CORES" "BENCH_CORES" "BUILD_CORES" "PASSES"
do
    printf "%-16s = %s\n" "$VAR" "${!VAR}"
done

echo
echo "============================="
echo

rm -rf "$BUILD_DIR"
mkdir "$BUILD_DIR"

export BENCH_SOURCE_DIR=$(realpath "$SOURCE_DIR/memcached")
export BENCH_BUILD_DIR=$(realpath "$BUILD_DIR"/memcached)

mkdir "$BENCH_BUILD_DIR"

"$BENCH_SOURCE_DIR"/make.sh
